version: '3.2'

services:

  db:
    env_file: ./.env
    command: >-
      /bin/bash -c 
      "while [[ ! -f /docker-entrypoint-initdb.d/latest.sql ]]; do
      echo 'Waiting for database bootstrap...'; sleep 5; done &&
      /entrypoint.sh mysqld"
    entrypoint: ""
    image: mysql:5.7
    restart: always
    volumes:
      - "dbrestore:/docker-entrypoint-initdb.d"

  dbbackup:
    env_file: ./.env
    image: schickling/mysql-backup-s3:latest
    restart: always

  dbrestore:
    env_file: ./.env
    image: quay.io/chiefy/alpine-awscli
    entrypoint: /bin/ash
    command: >-
      -c "aws s3 cp s3://tds-wiki/backup/latest.sql.gz /docker-entrypoint-initdb.d/latest.sql.gz 
      && gunzip /docker-entrypoint-initdb.d/latest.sql.gz"
    volumes:
      - "dbrestore:/docker-entrypoint-initdb.d"

  mediawiki:
    env_file: ./.env
    build: ./mediawiki
    container_name: mediawiki_php
    depends_on: 
      - db
    restart: always
    volumes:
      - "wikiwww:/var/www/mediawiki"
      - "s3images:/var/www/mediawiki/images"

  s3sync:
    env_file: ./.env
    build: ./s3sync
    restart: always
    environment:
      - SYNCDIR=/var/www/mediawiki/images
    volumes:
      - "s3images:/var/www/mediawiki/images"
    command: periodic_upload

  www:
    env_file: ./.env
    build: ./nginx
    container_name: "mediawiki_www"
    environment:
      - VIRTUAL_HOST=${WIKI_HOST}
      - LETSENCRYPT_HOST=${WIKI_HOST}
    depends_on:
      - mediawiki
    ports:
      - "80"
    restart: always
    volumes:
      - ./nginx/etc/nginx.conf:/etc/nginx/conf/nginx.conf
      - "wikiwww:/var/www/mediawiki:ro"
      - "s3images:/var/www/mediawiki/images:ro"

  nginx-web:
    image: nginx:stable
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: ${NGINX_WEB:-nginx-web}
    restart: always
    ports:
      - "${IP:-0.0.0.0}:80:80"
      - "${IP:-0.0.0.0}:443:443"
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
      - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
    logging:
      options:
        max-size: ${NGINX_WEB_LOG_MAX_SIZE:-4m}
        max-file: ${NGINX_WEB_LOG_MAX_FILE:-10}

  nginx-gen:
    image: jwilder/docker-gen
    command: >-
      -notify-sighup ${NGINX_WEB:-nginx-web}
      -watch
      -wait 5s:30s
      /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: ${DOCKER_GEN:-nginx-gen}
    restart: always
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
      - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    logging:
      options:
        max-size: ${NGINX_GEN_LOG_MAX_SIZE:-2m}
        max-file: ${NGINX_GEN_LOG_MAX_FILE:-10}

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: ${LETS_ENCRYPT:-nginx-letsencrypt}
    restart: always
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: ${DOCKER_GEN:-nginx-gen}
      NGINX_PROXY_CONTAINER: ${NGINX_WEB:-nginx-web}
    logging:
      options:
        max-size: ${NGINX_LETSENCRYPT_LOG_MAX_SIZE:-2m}
        max-file: ${NGINX_LETSENCRYPT_LOG_MAX_FILE:-10}

volumes:
  wikiwww:
  s3images:
  dbrestore:

networks:
  default:
    external:
      name: ${NETWORK:-webproxy}